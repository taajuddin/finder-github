{"version":3,"sources":["components/layout/Navbar.js","components/users/UserItem.js","components/users/Users.js","components/repos/RepoItem.js","components/repos/Repos.js","components/users/User.js","components/users/Search.js","components/layout/Alert.js","components/pages/About.js","App.js","index.js"],"names":["Navbar","icon","title","className","to","defaultProps","UserItem","user","login","avatar_url","html_url","src","alt","style","width","Users","users","loading","userStyle","map","key","id","propType","PropTypes","array","isRequired","bool","display","gridTemplateColumns","gridGap","RepoItem","repo","href","name","Repos","repos","User","getUser","getUserRepos","match","useEffect","params","location","company","blog","bio","followers","following","public_repos","public_gists","hireable","Search","searchUsers","setAlert","showClear","clearUsers","useState","text","setText","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","onClick","Alert","alert","msg","About","App","setUsers","setRepos","setUser","setLoading","a","axios","get","process","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","res","data","items","username","showAlert","setTimeout","exact","path","render","props","length","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d9d342ba.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\nconst Navbar =({icon,title})=>{\n\t\treturn(\n\t\t\t<div>\t\n\t\t\t\t <nav className=\"navbar bg-primary\" > \n\t\t\t\t <h1>\n\t\t\t\t\t <i className={icon} />{title}\n\t\t\t\t </h1>\n\t\t\t\t <ul className=\"nav_links\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to='/' className=\"link\">Home</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to='/about' className=\"link\">About</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t</ul>\n\t\t\t\t\n     \t\t\t </nav> \n\t\t\t</div>\n\t\t\t)\n\n}\nNavbar.defaultProps={\n\ttitle:'Github Finder',\n\ticon:'fab fa-github'\n}\nNavbar.propTypes={\n\ttitle:PropTypes.string.isRequired,\n\ticon:PropTypes.string.isRequired\n}\n\nexport default Navbar ","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\nconst UserItem =( {user:{login, avatar_url,html_url}})=>{\n\t\treturn(\n\t\t\t<div className=\"card text-center\">\n\t\t\t<img\n\t\t\t\tsrc={avatar_url} \n\t\t\t\talt=''\n\t\t\t\tclassName='round-img '\n\t\t\t\tstyle={{width: '60px'}}\n\t\t\t/>\n\t\t\t<h3>{login}</h3>\n\n\t\t\t<div>\n\t\t\t\t<Link to={`/user/${login}`} className='btn btn-dark btn-sm my-1' >\n\t\t\t\tMore\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t)\n\t\n}\nUserItem.propTypes={\n\tuser:PropTypes.object.isRequired,\n}\nexport default UserItem","import React from 'react'\nimport UserItem from './UserItem'\nimport PropTypes from 'prop-types'\nconst Users =({users,loading})=>{\n\tif(loading){\n\t\treturn (\n\t\t\t<i className=\"fa fa-spinner spinning\" />\n\t\t)\n\t}else{\n\t\treturn(\n\t\t\t<div style={userStyle} className='container'>\n\t\t\t{users.map((user)=>(\n\t\t\t\t<UserItem key={user.id} user={user}/>\n\t\t\t))}\n\t\t\t</div>\n\t\t\t)\n\t}\n\t\t\n}\nUsers.propType={\n\tusers:PropTypes.array.isRequired,\n\tloading:PropTypes.bool.isRequired\n}\nconst userStyle={\n\tdisplay:'grid',\n\tgridTemplateColumns:'repeat(3,1fr)',\n\tgridGap:'1rem'\n}\nexport default Users","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\n const RepoItem = ({repo}) => {\n    return (\n        <div className=\"card\">\n            <h3>\n        <a href={repo.html_url}>{repo.name}</a>\n            </h3>\n        </div>\n    )\n}\nRepoItem.propTypes={\n    repo:PropTypes.object.isRequired\n}\nexport default RepoItem","import React from 'react'\nimport PropTypes from 'prop-types'\nimport RepoItem from './RepoItem'\nconst Repos = ({repos}) => {\n    return repos.map(repo => <RepoItem repo={repo} id={repo.id} />)\n}\nRepos.propTypes={\n    repos:PropTypes.array.isRequired\n}\nexport default Repos","import React, { useEffect,Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\nimport Repos from '../repos/Repos'\nconst  User = ({user,loading,repos,getUser,getUserRepos,match})=>{\n    useEffect(()=>{\n        getUser(match.params.login);\n        getUserRepos(match.params.login);\n        //eslint-disable-next-line\n    },[])\n        const {\n            name,\n            avatar_url,\n            location,\n            login,\n            company,\n            blog,\n            bio,\n            html_url,\n            followers,\n            following,\n            public_repos,\n            public_gists,\n            hireable\n        }=user;\n        if(loading) return (\n            <div>\n            <i className='fa fa-spinner spinning' />\n            </div>\n        )\n        return (\n            <Fragment>\n               <Link to='/' className='btn btn-light'>Back to Search</Link>\n               Hireable:{''}\n               {hireable ?(<i className=\"fas fa-check text-success\"  />):\n               (<i className=\"fas fa-times-circle text-danger \"  />)}\n               <div className=\"card grid-2\">\n                   <div className=\"all-center\">\n                       <img src={avatar_url} alt='' \n                       className='round-img'\n                       style={{width:'150px'}}/>\n                        <h1>{name}</h1>\n                        <p>Location:{location}</p>\n                   </div>\n                   <div>\n                       {bio && <Fragment>\n                           <h3>Bio</h3>\n                           <p>{bio}</p>\n                           </Fragment>}\n                           <a href={html_url} className='btn btn-dark my-1'>\n                               visit Github profile\n                           </a>\n                           <ul>\n                               <li>\n                                   {login && <Fragment>\n                                   <strong>username: </strong>{login}\n                                       </Fragment>}\n                               </li>\n                               <li>\n                                   {company && <Fragment>\n                                       <strong>Company:</strong>{company}\n                                       </Fragment>}\n                               </li>\n                               <li>\n                                   {blog && <Fragment>\n                                       <strong>Website:</strong>{blog}\n                                       </Fragment>}\n                               </li>\n                           </ul>\n                   </div>\n               </div>\n               <div className=\"card text-center\">\n                    <div className=\"badge badge-primary\">Followers:{followers}</div>\n                    <div className=\"badge badge-success\">Following:{following}</div>\n                    <div className=\"badge badge-light\">Public Repos:{public_repos}</div>\n                    <div className=\"badge badge-dark\">Public Gists:{public_gists}</div>\n               </div>\n               <Repos repos={repos} />\n            </Fragment>\n        )\n    }\nUser.propTypes={\n    loading:PropTypes.bool,\n    user:PropTypes.object.isRequired,\n    repos:PropTypes.array.isRequired,\n    getUser:PropTypes.func.isRequired,\n    getUserRepos:PropTypes.func.isRequired\n}\nexport default User\n","import React,{ useState } from 'react'\nimport PropTypes from 'prop-types'\nconst Search =({searchUsers,setAlert,showClear,clearUsers})=>{\n   const [text, setText]=useState('')\n    const onChange=(e)=> setText(e.target.value);\n    \n    const onSubmit=(e)=>{\n        e.preventDefault()\n        if(text===''){\n            setAlert('please enter something', 'light')\n        }\n        else{\n            searchUsers(text)\n            setText('')\n        }\n        \n    }\n        return (\n            <div>\n              <form className='form' onSubmit={onSubmit}>\n                  <input type=\"text\" name=\"text\" placeholder=\"serch user....\" value={text} onChange={onChange}/>\n                  <input type=\"submit\" value=\"search\" className=\"btn btn-dark btn-block\" />\n            </form><br/>\n            {showClear && (\n                     <div>\n                     <button className='btn btn-light btn-block' onClick={clearUsers}>clear</button>\n                 </div>\n            )}   \n            </div>\n        )\n    }\n\nSearch.propTypes={\n    searchUsers:PropTypes.func.isRequired,\n    clearUsers:PropTypes.func.isRequired,\n    showClear:PropTypes.bool.isRequired,\n    setAlert:PropTypes.func.isRequired\n}\nexport default Search\n","import React from 'react'\n const Alert = ({alert,type}) => {\n    return (\n        alert !==null &&(\n            <div className={`alert alert-${alert.type}`}>\n               <i className=\"fas fa-info-circle\"></i>{alert.msg}\n            </div>\n        )\n    )\n}\nexport default Alert","import React, { Fragment } from 'react';\n\nconst About = () => {\n  return (\n    <Fragment>\n      <h1>About This App</h1>\n      <p>App to search Github users</p>\n      <p>Version: 1.0.0</p>\n    </Fragment>\n  );\n};\n\nexport default About;","import React, { Fragment,useState } from 'react';\nimport axios from 'axios'\nimport {BrowserRouter as Router, Switch,Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Users from './components/users/Users'\nimport User from './components/users/User'\nimport Search from './components/users/Search'\nimport Alert from './components/layout/Alert'\nimport About from './components/pages/About'\nimport './App.css';\n\n\n\nconst App =()=> {\n  const [users,setUsers]=useState([]);\n  const [repos,setRepos]=useState([]);\n  const [user,setUser]=useState({});\n  const [loading,setLoading]=useState(false);\n  const [alert,setAlert]=useState(null);\n//  async componentDidMount(){\n//    this.setState({loading:true})\n//     const res =await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n//     this.setState({users:res.data,loading:false})\n//   }\n  const searchUsers=async text=>{\n    setLoading(true)\n    const res =await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n   setUsers(res.data.items)\n   setLoading(false)\n  \n  }\n  //Get the single user from github\n  const getUser=async (username)=>{\n    setLoading(true)\n    const res =await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n    setUser(res.data)\n    setLoading(false)\n  \n  }\n  //get users repos \n  const  getUserRepos=async (username)=>{\n   setLoading(true)\n    const res =await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n    setRepos(res.data)\n   setLoading(false)\n  \n  }\n  //clear the users\n  const clearUsers=()=>{setUsers([])\n    setLoading(false)}\n\n  const showAlert=(msg,type)=>{\n      setAlert({msg,type})\n      setTimeout(()=>setAlert(null),3000)\n  }\n    return (\n      <Router>\n          <div className=\"App\">\n            <Navbar />\n            <div className=\"container\">\n            <Alert alert={alert} />\n            <Switch>\n              <Route exact path='/' render={props=>(\n                <Fragment>\n                  <Search searchUsers={searchUsers}\n                      clearUsers={clearUsers}\n                      showClear={users.length >0 ?true:false}\n                      setAlert={showAlert}\n                      />\n                      \n                      <div className=\"container\">\n                      <Users loading={loading} users={users} />\n                      </div>\n                </Fragment>\n              )}/>\n              <Route exact path='/about' component={About}/>\n              <Route exact path='/user/:login' render={props=>(\n                <User {...props}\n                 getUser={getUser}\n                 getUserRepos={getUserRepos}\n                 repos={repos}\n                  user={user}\n                 loading={loading}/>\n              )} />\n            </Switch>\n            \n            </div>\n          </div>\n      </Router>\n    );\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}